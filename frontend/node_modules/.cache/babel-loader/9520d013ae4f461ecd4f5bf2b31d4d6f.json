{"ast":null,"code":"var _jsxFileName = \"/home/arunraj/project/fastapi-react/frontend/src/Components/Todos.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { Box, Button, Flex, Input, InputGroup, Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay, Stack, Text, useDisclosure } from \"@chakra-ui/core\";\nconst TodosContext = React.createContext({\n  todos: [],\n  fetchTodos: () => {}\n});\n\nfunction AddTodo() {\n  const [item, setItem] = React.useState(\"\");\n  const {\n    todos,\n    fetchTodos\n  } = React.useContext(TodosContext);\n\n  const handleInput = event => {\n    setItem(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    const newTodo = {\n      \"id\": todos.length + 1,\n      \"item\": item\n    };\n    fetch(\"http://localhost:8000/todo\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newTodo)\n    }).then(fetchTodos);\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup, {\n    size: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    pr: \"4.5rem\",\n    type: \"text\",\n    placeholder: \"Add a todo item\",\n    \"aria-label\": \"Add a todo item\",\n    onChange: handleInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  })));\n}\n\nfunction UpdateTodo({\n  item,\n  id\n}) {\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  const [todo, setTodo] = useState(item);\n  const {\n    fetchTodos\n  } = React.useContext(TodosContext);\n\n  const updateTodo = async () => {\n    await fetch(`http://localhost:8000/todo/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        item: todo\n      })\n    });\n    onClose();\n    await fetchTodos();\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    h: \"1.5rem\",\n    size: \"sm\",\n    onClick: onOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, \"Update Todo\"), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isOpen,\n    onClose: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalOverlay, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ModalContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, \"Update Todo\"), /*#__PURE__*/React.createElement(ModalCloseButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup, {\n    size: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    pr: \"4.5rem\",\n    type: \"text\",\n    placeholder: \"Add a todo item\",\n    \"aria-label\": \"Add a todo item\",\n    value: todo,\n    onChange: e => setTodo(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    h: \"1.5rem\",\n    size: \"sm\",\n    onClick: updateTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, \"Update Todo\")))));\n}\n\nfunction DeleteTodo({\n  id\n}) {\n  const {\n    fetchTodos\n  } = React.useContext(TodosContext);\n\n  const deleteTodo = async () => {\n    await fetch(`http://localhost:8000/todo/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: {\n        \"id\": id\n      }\n    });\n    await fetchTodos();\n  };\n\n  return /*#__PURE__*/React.createElement(Button, {\n    h: \"1.5rem\",\n    size: \"sm\",\n    onClick: deleteTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }\n  }, \"Delete Todo\");\n}\n\nfunction TodoHelper({\n  item,\n  id,\n  fetchTodos\n}) {\n  return /*#__PURE__*/React.createElement(Box, {\n    p: 1,\n    shadow: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Flex, {\n    justify: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    mt: 4,\n    as: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, item, /*#__PURE__*/React.createElement(Flex, {\n    align: \"end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(UpdateTodo, {\n    item: item,\n    id: id,\n    fetchTodos: fetchTodos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(DeleteTodo, {\n    id: id,\n    fetchTodos: fetchTodos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  })))));\n}\n\nexport default function Todos() {\n  const [todos, setTodos] = useState([]);\n\n  const fetchTodos = async () => {\n    const response = await fetch(\"http://localhost:8000/todo\");\n    const todos = await response.json();\n    setTodos(todos.data);\n  };\n\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n  return /*#__PURE__*/React.createElement(TodosContext.Provider, {\n    value: {\n      todos,\n      fetchTodos\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AddTodo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Stack, {\n    spacing: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  }, todos.map(todo => /*#__PURE__*/React.createElement(TodoHelper, {\n    item: todo.item,\n    id: todo.id,\n    fetchTodos: fetchTodos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }))));\n}","map":{"version":3,"sources":["/home/arunraj/project/fastapi-react/frontend/src/Components/Todos.jsx"],"names":["React","useEffect","useState","Box","Button","Flex","Input","InputGroup","Modal","ModalBody","ModalCloseButton","ModalContent","ModalFooter","ModalHeader","ModalOverlay","Stack","Text","useDisclosure","TodosContext","createContext","todos","fetchTodos","AddTodo","item","setItem","useContext","handleInput","event","target","value","handleSubmit","newTodo","length","fetch","method","headers","body","JSON","stringify","then","UpdateTodo","id","isOpen","onOpen","onClose","todo","setTodo","updateTodo","e","DeleteTodo","deleteTodo","TodoHelper","Todos","setTodos","response","json","data","map"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {\n    Box,\n    Button,\n    Flex,\n    Input,\n    InputGroup,\n    Modal,\n    ModalBody,\n    ModalCloseButton,\n    ModalContent,\n    ModalFooter,\n    ModalHeader,\n    ModalOverlay,\n    Stack,\n    Text,\n    useDisclosure\n} from \"@chakra-ui/core\";\n\nconst TodosContext = React.createContext({\n  todos: [], fetchTodos: () => {}\n})\n\nfunction AddTodo() {\n  const [item, setItem] = React.useState(\"\")\n  const {todos, fetchTodos} = React.useContext(TodosContext)\n\n  const handleInput = event  => {\n    setItem(event.target.value)\n  }\n\n  const handleSubmit = (event) => {\n    const newTodo = {\n      \"id\": todos.length + 1,\n      \"item\": item\n    }\n\n    fetch(\"http://localhost:8000/todo\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(newTodo)\n    }).then(fetchTodos)\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <InputGroup size=\"md\">\n        <Input\n          pr=\"4.5rem\"\n          type=\"text\"\n          placeholder=\"Add a todo item\"\n          aria-label=\"Add a todo item\"\n          onChange={handleInput}\n        />\n      </InputGroup>\n    </form>\n  )\n}\n\nfunction UpdateTodo({item, id}) {\n  const {isOpen, onOpen, onClose} = useDisclosure()\n  const [todo, setTodo] = useState(item)\n  const {fetchTodos} = React.useContext(TodosContext)\n\n  const updateTodo = async () => {\n    await fetch(`http://localhost:8000/todo/${id}`, {\n      method: \"PUT\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ item: todo })\n    })\n    onClose()\n    await fetchTodos()\n  }\n\n  return (\n    <>\n      <Button h=\"1.5rem\" size=\"sm\" onClick={onOpen}>Update Todo</Button>\n      <Modal isOpen={isOpen} onClose={onClose}>\n        <ModalOverlay/>\n        <ModalContent>\n          <ModalHeader>Update Todo</ModalHeader>\n          <ModalCloseButton/>\n          <ModalBody>\n            <InputGroup size=\"md\">\n              <Input\n                pr=\"4.5rem\"\n                type=\"text\"\n                placeholder=\"Add a todo item\"\n                aria-label=\"Add a todo item\"\n                value={todo}\n                onChange={e => setTodo(e.target.value)}\n              />\n            </InputGroup>\n          </ModalBody>\n\n          <ModalFooter>\n            <Button h=\"1.5rem\" size=\"sm\" onClick={updateTodo}>Update Todo</Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  )\n}\n\nfunction DeleteTodo({id}) {\n  const {fetchTodos} = React.useContext(TodosContext)\n\n  const deleteTodo = async () => {\n    await fetch(`http://localhost:8000/todo/${id}`, {\n      method: \"DELETE\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: { \"id\": id }\n    })\n    await fetchTodos()\n  }\n\n  return (\n    <Button h=\"1.5rem\" size=\"sm\" onClick={deleteTodo}>Delete Todo</Button>\n  )\n}\n\nfunction TodoHelper({item, id, fetchTodos}) {\n  return (\n    <Box p={1} shadow=\"sm\">\n      <Flex justify=\"space-between\">\n        <Text mt={4} as=\"div\">\n          {item}\n          <Flex align=\"end\">\n            <UpdateTodo item={item} id={id} fetchTodos={fetchTodos}/>\n            <DeleteTodo id={id} fetchTodos={fetchTodos}/>\n          </Flex>\n        </Text>\n      </Flex>\n    </Box>\n  )\n}\n\nexport default function Todos() {\n  const [todos, setTodos] = useState([])\n  const fetchTodos = async () => {\n    const response = await fetch(\"http://localhost:8000/todo\")\n    const todos = await response.json()\n    setTodos(todos.data)\n  }\n  useEffect(() => {\n    fetchTodos()\n  }, [])\n  return (\n    <TodosContext.Provider value={{todos, fetchTodos}}>\n      <AddTodo />\n      <Stack spacing={5}>\n        {\n          todos.map((todo) => (\n            <TodoHelper item={todo.item} id={todo.id} fetchTodos={fetchTodos} />\n          ))\n        }\n      </Stack>\n    </TodosContext.Provider>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}